Thinking1	XGBoost与GBDT的区别是什么？			简要说明这两者之间的区别（10points）


Thinking2	举一个你之前做过的预测例子（用的什么模型，解决什么问题，比如我用LR模型，对员工离职进行了预测，效果如何... 请分享到课程微信群中）			简要说明之前做过的例子，用的模型，解决的问题，并且在群里分享（10points）


Thinking3	请你思考，在你的工作中，需要构建哪些特征（比如用户画像，item特征...），这些特征都包括哪些维度（鼓励分享到微信群中，进行交流）			能对工作场景，以及构造的特征进行洞察，在班级群中分享（10points）


Thinking1	答：1:GBDT以CART作为基分类器，XGBoost还支持线性分类器;
		    2:GBDT用到一阶导数信息，XGBoost对代价函数进行了二阶泰勒展开,同时用到一阶与二阶导数，支持自定义代价函数(二阶可导)。
		    3:XGBoost在代价函数中加入正则化项，控制模型复杂度，降低模型variance,模型更加简单，防止过拟合，正则项包含树的叶子节点个数、每个叶子节点上输出的score的L2模的平方和
		    4:分裂结点处通过结构打分和分割损失动态生长。结构分数代替了回归树的误差平方和。
		    5：对缺失值处理。对特征值有缺失的样本，XGBoost可以自动学习它的分裂方向
		    6：XGBoost支持并行处理，XGBoost的并行不是在模型上的并行，而是在特征上的并行，将特征列排序后以block的形式存储在内存中，在后面的迭代中重复使用这个结构。这个block也使得并行化成为了可能，其次在进行节点分裂时，计算每个特征的增益，最终选择增益最大的那个特征去做分割，那么各个特征的增益计算就可以开多线程进行。		    等等区别。需要大量的练习和运用，慢慢理解，暂时还有点云里雾里。


Thinking2	答：已经分享到群里了。

Thinking3	在我的工作中，需要做机器人（机械臂的正逆运动学和路径规划），需要考虑到的就是机器人的DH参数（theta,d,a,alpha），这4个角度决定了机器人本身的物理特征；在运动学正反解中，需要考虑的是，6个机械臂角度的范围，已经反解8（或者4）个解之间的角度差分，为路径规划做好铺垫，在路径规划中，每一个状态都可能有8个机械臂的状态都可以满足这个姿态，但是怎么才能去选择这8个角度的某一个呢，这个时候需要看相邻装的角度的差分，找一个差分最小的，6个角度之中，最优先考虑机械臂1，因为它决定了机械臂的位置，其次2-6的状态，优先考虑哪一个呢？这就需要大量的数据，进行试验，最后得出一个模型。