Thinking1	KNN与KMeans中的K分别代表什么？
		简要说出KNN与KMeans中K的含义（10points）


Thinking2	都有哪些常用的启发式算法？
		简要说明常用的启发式算法（20points）


Thinking3	遗传算法的原理是怎样的？
		简要说明遗传算法的原理（20points）


Thinking1	KNN中的K：统计距离最近的K个邻居对于K个最近的邻居，它们属于哪个分类最多，待分类物体就属于哪一类；
		KMeans中的K：K个点作为初始的类中心点，这些点一般都是从数据集中随机抽取的；将每个点分配到最近的
类中心点，这样就形成了K个类，然后重新计算每个类的中心点；重复Step2，直到类不发生变化，或者你也可以设置最大迭代
次数，这样即使类中心点发生变化，但是只要达到最大迭代次数就会结束。


Thinking2	启发式算法：相对于最优化算法提出的，一个问题的最优算法求得该问题每个实例的最优解
启发式算法可以这样定义：一个基于直观或经验构造的算法，在可接受的花费（指计算时间和空间）下给出待
解决组合优化问题每一个实例的一个可行解，该可行解与最优解的偏离程度一般不能被预计。
常用的算法有：模拟退火算法（SA）、遗传算法（GA）、蚁群算法（ACO）、人工神经网络（ANN）。

Thinking3	遗传算法是一种基于自然选择和群体遗传机理的搜索算法,它模拟了自然选择和自然遗传过程中的
繁殖、杂交和突变现象.再利用遗传算法求解问题时,问题的每一个可能解都被编码成一个“染色体”,即个体,若干个
个体构成了群体(所有可能解).在遗传算法开始时,总是随机的产生一些个体(即初始解),根据预定的目标函数对每一
个个体进行评估,给出一个适应度值,基于此适应度值,选择一些个体用来产生下一代,选择操作体现了“适者生存”的
原理,“好”的个体被用来产生下一代,“坏”的个体则被淘汰,然后选择出来的个体,经过交叉和变异算子进行再组合
生成新的一代,这一代的个体由于继承了上一代的一些优良性状,因而在性能上要优于上一代,这样逐步朝着最优解的方
向进化.因此,遗传算法可以看成是一个由可行解组成的群体初步进化的过程.
